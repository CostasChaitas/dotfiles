# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝ 
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗ 
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'seebi/tmux-colors-solarized'

#-------------------------------------------------------------------------------
#                                   Bindings
#-------------------------------------------------------------------------------

# Remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-Space

# Reload tmux config
bind r source-file ~/.tmux.conf \; display-message "Reloaded tmux config!"

# Windows (tabs)
# Add new
bind -n C-t new-window
# Previous and next window (tabs)
bind -n C-Left previous-window
bind -n C-Right next-window

# Panes (Splits)
bind j split-window -v -c "#{pane_current_path}"
bind Down split-window -v -c "#{pane_current_path}"
bind C-Down split-window -v -c "#{pane_current_path}"

bind l split-window -h -c "#{pane_current_path}"
bind Right split-window -h -c "#{pane_current_path}"
bind C-Right split-window -h -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n S-Left if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n S-Down if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n S-Up if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n S-Right if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi S-Left select-pane -L
bind-key -T copy-mode-vi S-Down select-pane -D
bind-key -T copy-mode-vi S-Up select-pane -U
bind-key -T copy-mode-vi S-Right select-pane -R

# Maximize pane
bind Enter resize-pane -Z

# Rename window withot showing the last title as default prompt
bind-key , command-prompt "rename-window '%%'"

#-------------------------------------------------------------------------------
#                                   Settings
#-------------------------------------------------------------------------------

# copy-mode using space
bind C-Space copy-mode
bind Space copy-mode

# Vi mode
set -g status-keys vi
set -g mode-keys vi # for copy mode

# Indices start at 1 instead of 0 (windows, panes...)
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when they're closed (so you don't have only a window with index 3)
set -g renumber-windows on

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# Copy mode using v (selection) and y (copy) similar to vim
# On Linux, pbcopy should be an alias to the proper xclip command
bind-key -T copy-mode-vi y \
        send-keys -X copy-pipe-and-cancel "pbcopy" \; \
        display-message "Copieddddd!"

# Selection with mouse. It basically does nothing (default behaviour is to copy selection) and lets you copy the selection with y
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X stop-selection

# Double click to select word
# On Linux, pbcopy should be an alias to the proper xclip command
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word

# Triple click to select line
# On Linux, pbcopy should be an alias to the proper xclip command
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line

# Use 24-bit (real) color
set -g default-terminal "screen-256color"
# tell Tmux that outside terminal supports true color
set -ga terminal-overrides ",xterm-256color*:Tc"

# Avoid ESC timeout for nvim
set -sg escape-time 0

# Duration of messages
set-option -g display-time 500

#-------------------------------------------------------------------------------
#                                  Appearance
#-------------------------------------------------------------------------------
# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/

# Statusbar (tabs)
set -g status-position top
set -g status-justify left      # Position of the windows (tabs)
# Left widgets
set -g status-left "#[fg=green]#S "
# Right widgets
set -g status-right "#[fg=red]#{s/root//:client_key_table}"
# Colors
set -g status-bg "#1C2023"
set -g status-fg "#E3DFDC"

# Color of the command line (prefix + :)
set -g message-style fg="#ADB3BA"

# Windows (Tabs)
# {{{
  # HELP
  # Some formats:
  # #I is index
  # #F is window status (current, last, zoomed...)
  # #{window_name}
  # #{?window_zoomed_flag,a,b} is "if window zoomed", print a. If not, print b
  # #[fg=red] to change foreground

  # Active
  setw -g window-status-current-format " #{?window_zoomed_flag,#[fg=red](,}#{window_name}#{?window_zoomed_flag,#[fg=red]),} "
  setw -g window-status-current-style fg="#C7CCD1",bg="#565E65"
  # Inactive
  setw -g window-status-format " #{?window_zoomed_flag,#[fg=red](,}#{window_name}#{?window_zoomed_flag,#[fg=red]),} "
  setw -g window-status-style fg="#747C84",bg="#1C2023"
# }}}

# Panes
# {{{
  setw -g pane-border-status top                                    # Add a pane border line on top. This helps to tell apart the statusbar
  setw -g pane-border-format ''                                     # Just lines for the pane lines
  set -g window-style 'fg=#E3DFDC,bg=#1C2023'             # Inactive pane style
  set -g window-active-style 'fg=#E3DFDC,bg=#1C2023'      # Active pane style
  # Inactive pane border
  set -g pane-border-style bg="#1C2023",fg="#747C84"
  # Active pane border
  set -g pane-active-border-style bg="#1C2023",fg="#DFE2E5"
# }}}

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

